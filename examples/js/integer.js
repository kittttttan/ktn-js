// Generated by CoffeeScript 1.10.0
(function() {
  var Integer, basic, d, fib, pi;

  Integer = typeof require !== "undefined" && require !== null ? require('../../js/integer').Integer : this.Integer;

  basic = function() {
    var a, b, r;
    r = (Math.random() * 4 | 0) + 3;
    a = Integer.random(r);
    b = Integer.num(100000);
    return console.log("a         = " + (a.toString()) + "\nb         = " + (b.toString()) + "\na  +  b   = " + (a.add(b).toString()) + "\na  -  b   = " + (a.sub(b).toString()) + "\na  *  b   = " + (a.mul(b).toString()) + "\na  /  b   = " + (a.div(b).toString()) + "\na  %  b   = " + (a.mod(b).toString()) + "\na >>  2   = " + (a.rightShift(2).toString()) + "\na <<  2   = " + (a.leftShift(2).toString()) + "\na >> 17   = " + (a.rightShift(17).toString()) + "\na << 17   = " + (a.leftShift(17).toString()) + "\na ^  2    = " + (a.pow(2).toString()) + "\na ^ 0.5   = " + (a.pow(.5).toString()) + "\n          ~ " + (a.sqrt().toString()) + "\ngcd(a, b) = " + (a.gcd(b).toString()) + "\n          = " + (a.gcdBin(b).toString()));
  };

  fib = function(a) {
    var b, c, d, i;
    b = Integer.zero;
    i = 0;
    c = Integer.one;
    while (i < a) {
      d = b.clone();
      b = b.add(c);
      c = d;
      ++i;
    }
    return b;
  };

  pi = function(a) {
    var a239, a5, arccot, n;
    if (!a) {
      a = 1;
    }
    n = Integer.num(10).pow(a);
    arccot = function(m) {
      var b, c, k, l2, m2, s;
      c = n;
      a = c.div(m);
      b = a.clone();
      m2 = m.square();
      k = Integer.one;
      s = true;
      l2 = Integer.num(2);
      while (c.isNonZero()) {
        b = b.div(m2);
        k = k.add(l2);
        c = b.div(k);
        s = !s;
        a = s ? a.add(c) : a.sub(c);
      }
      return a;
    };
    a5 = arccot(Integer.num(5));
    a239 = arccot(Integer.num(239));
    return a5.leftShift(2).sub(a239).leftShift(2);
  };

  d = Date.now();

  console.log('-- basic operations --');

  basic();

  console.log("-- fibonacchi --\nfib(77) = " + (fib(77).toString()));

  console.log("-- pi --\npi(77) = " + (pi(77).toString()) + "\nTime: " + (Date.now() - d) + "ms");

}).call(this);
